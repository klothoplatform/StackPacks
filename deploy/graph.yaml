resources:
    aws:cloudfront_distribution:stacksnap:
        CacheBehaviors:
            - AllowedMethods:
                - GET
                - HEAD
                - OPTIONS
              CachedMethods:
                - GET
                - HEAD
              DefaultTtl: 0
              ForwardedValues:
                Cookies:
                    Forward: none
                QueryString: true
              MaxTtl: 0
              MinTtl: 0
              PathPattern: /*
              SmoothStreaming: false
              TargetOriginId: load-balancer-2
              ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
            AllowedMethods:
                - DELETE
                - GET
                - HEAD
                - OPTIONS
                - PATCH
                - POST
                - PUT
            CachedMethods:
                - HEAD
                - GET
            DefaultTtl: 3600
            ForwardedValues:
                Cookies:
                    Forward: none
                QueryString: true
            MaxTtl: 86400
            MinTtl: 0
            TargetOriginId: stacksnap-ui
            ViewerProtocolPolicy: allow-all
        Enabled: true
        Origins:
            - DomainName: aws:s3_bucket:stacksnap-ui#BucketRegionalDomainName
              OriginId: stacksnap-ui
              S3OriginConfig:
                OriginAccessIdentity: aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0#CloudfrontAccessIdentityPath
            - CustomOriginConfig:
                HttpPort: 80
                HttpsPort: 443
                OriginProtocolPolicy: http-only
                OriginSslProtocols:
                    - TLSv1.2
                    - TLSv1
                    - SSLv3
                    - TLSv1.1
              DomainName: aws:load_balancer:load-balancer-2#DnsName
              OriginId: load-balancer-2
        Restrictions:
            GeoRestriction:
                RestrictionType: none
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: cloudfront_distribution_17
        ViewerCertificate:
            CloudfrontDefaultCertificate: true
    aws:security_group:vpc-0:load-balancer-2-security_group:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: load-balancer-2-security_group
        Vpc: aws:vpc:vpc-0
    aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0:
        Comment: this is needed to set up S3 polices so that the S3 bucket is not public
    aws:load_balancer:load-balancer-2:
        Scheme: internet-facing
        SecurityGroups:
            - aws:security_group:vpc-0:load-balancer-2-security_group
        Subnets:
            - aws:subnet:vpc-0:subnet-2
            - aws:subnet:vpc-0:subnet-3
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: load-balancer-2
        Type: application
    aws:s3_bucket_policy:s3_bucket_policy-0:
        Bucket: aws:s3_bucket:stacksnap-ui
        Policy:
            Statement:
                - Action:
                    - s3:GetObject
                  Effect: Allow
                  Principal:
                    AWS:
                        - aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0#IamArn
                  Resource:
                    - aws:s3_bucket:stacksnap-ui#AllBucketDirectory
            Version: "2012-10-17"
    aws:load_balancer_listener:load-balancer-2:load_balancer_2-listener-0:
        DefaultActions:
            - TargetGroup: aws:target_group:default-rule-stack-snap
              Type: forward
        LoadBalancer: aws:load_balancer:load-balancer-2
        Port: 80
        Protocol: HTTP
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: load_balancer_2-listener-0
    aws:s3_bucket:stacksnap-ui:
        ForceDestroy: true
        SSEAlgorithm: AES256
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: s3-bucket-18
    aws:load_balancer_listener_rule:load_balancer_2-listener-0:default-rule:
        Actions:
            - TargetGroup: aws:target_group:default-rule-stack-snap
              Type: forward
        Conditions:
            - PathPattern:
                Values:
                    - /*
        Listener: aws:load_balancer_listener:load-balancer-2:load_balancer_2-listener-0
        Priority: 1
        Tags:
            Name: default-rule
    aws:target_group:default-rule-stack-snap:
        HealthCheck:
            Enabled: true
            HealthyThreshold: 5
            Interval: 30
            Protocol: HTTP
            Timeout: 5
            UnhealthyThreshold: 2
        Port: 80
        Protocol: HTTP
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: default-rule-stack-snap
        TargetType: ip
        Vpc: aws:vpc:vpc-0
    aws:ecr_image:ecs_service_0-ecs_service_0:
        BaseImage: python:3.11-slim-bookworm
        Context: .
        Dockerfile: Dockerfile
        Platform: linux/amd64
        Repo: aws:ecr_repo:ecs_service_0-ecs_service_0-ecr_repo
    aws:ecr_repo:ecs_service_0-ecs_service_0-ecr_repo:
        ForceDelete: true
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: ecs_service_0-ecs_service_0-ecr_repo
    aws:ecs_cluster:ecs_cluster-0:
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: ecs_cluster-0
    aws:ecs_service:stack-snap:
        AssignPublicIp: false
        Cluster: aws:ecs_cluster:ecs_cluster-0
        DesiredCount: 1
        EnableExecuteCommand: false
        ForceNewDeployment: true
        LaunchType: FARGATE
        LoadBalancers:
            - ContainerName: ecs_service_0
              ContainerPort: 80
              TargetGroup: aws:target_group:default-rule-stack-snap
        SecurityGroups:
            - aws:security_group:vpc-0:ecs_service_0-security_group
        Subnets:
            - aws:subnet:vpc-0:subnet-0
            - aws:subnet:vpc-0:subnet-1
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: ecs_service_0
        TaskDefinition: aws:ecs_task_definition:ecs_service_0
    aws:ecs_task_definition:ecs_service_0:
        ContainerDefinitions:
            - Cpu: 256
              Environment:
                - Name: PULUMISTACKS_TABLE_NAME
                  Value: aws:dynamodb_table:pulumistacks#Name
                - Name: USERPACKS_TABLE_NAME
                  Value: aws:dynamodb_table:userpacks#Name
                - Name: USERAPPS_TABLE_NAME
                  Value: aws:dynamodb_table:userapps#Name
                - Name: DEPLOYMENTS_TABLE_NAME
                  Value: aws:dynamodb_table:deployments#Name
                - Name: IAC_STORE_BUCKET_NAME
                  Value: aws:s3_bucket:iac-store#BucketName
                - Name: STACK_SNAP_BINARIES_BUCKET_NAME
                  Value: aws:s3_bucket:stack-snap-binaries#BucketName
              Essential: true
              Image: aws:ecr_image:ecs_service_0-ecs_service_0
              LogConfiguration:
                LogDriver: awslogs
                Options:
                    awslogs-group: aws:log_group:ecs_service_0-log-group#LogGroupName
                    awslogs-region: aws:region:region-0#Name
                    awslogs-stream-prefix: ecs_service_0-ecs_service_0
              Memory: 512
              MountPoints:
                - ContainerPath: /mnt/efs
                  ReadOnly: false
                  SourceVolume: stack-snap-deploy-logs
              Name: ecs_service_0
              PortMappings:
                - ContainerPort: 80
                  HostPort: 80
                  Protocol: TCP
        Cpu: "256"
        EfsVolumes:
            - AuthorizationConfig:
                AccessPoint: aws:efs_access_point:deploy-logs:stack-snap-deploy-logs
                Iam: ENABLED
              FileSystem: aws:efs_file_system:deploy-logs
              Name: stack-snap-deploy-logs
              TransitEncryption: ENABLED
        ExecutionRole: aws:iam_role:ecs_service_0-execution-role
        Memory: "512"
        NetworkMode: awsvpc
        RequiresCompatibilities:
            - FARGATE
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: ecs_service_0
        TaskRole: aws:iam_role:ecs_service_0-execution-role
    aws:subnet:vpc-0:subnet-0:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        CidrBlock: 10.0.128.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-0-route_table
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-0
        Type: private
        Vpc: aws:vpc:vpc-0
    aws:subnet:vpc-0:subnet-1:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-1
        CidrBlock: 10.0.192.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-1-route_table
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-1
        Type: private
        Vpc: aws:vpc:vpc-0
    aws:efs_access_point:deploy-logs:stack-snap-deploy-logs:
        FileSystem: aws:efs_file_system:deploy-logs
        PosixUser:
            Gid: 1000
            Uid: 1000
        RootDirectory:
            CreationInfo:
                OwnerGid: 1000
                OwnerUid: 1000
                Permissions: "777"
            Path: /mnt/logs
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: stack-snap-deploy-logs
    aws:iam_role:ecs_service_0-execution-role:
        AssumeRolePolicyDoc:
            Statement:
                - Action:
                    - sts:AssumeRole
                  Effect: Allow
                  Principal:
                    Service:
                        - ecs-tasks.amazonaws.com
            Version: "2012-10-17"
        InlinePolicies:
            - Name: deploy-logs-policy
              Policy:
                Statement:
                    - Action:
                        - efs:Client*
                      Effect: Allow
                      Resource:
                        - aws:efs_file_system:deploy-logs#Arn
                Version: "2012-10-17"
            - Name: pulumistacks-policy
              Policy:
                Statement:
                    - Action:
                        - dynamodb:*
                      Effect: Allow
                      Resource:
                        - aws:dynamodb_table:pulumistacks#Arn
                        - aws:dynamodb_table:pulumistacks#DynamoTableStreamArn
                        - aws:dynamodb_table:pulumistacks#DynamoTableBackupArn
                        - aws:dynamodb_table:pulumistacks#DynamoTableExportArn
                        - aws:dynamodb_table:pulumistacks#DynamoTableIndexArn
                Version: "2012-10-17"
            - Name: userpacks-policy
              Policy:
                Statement:
                    - Action:
                        - dynamodb:*
                      Effect: Allow
                      Resource:
                        - aws:dynamodb_table:userpacks#Arn
                        - aws:dynamodb_table:userpacks#DynamoTableStreamArn
                        - aws:dynamodb_table:userpacks#DynamoTableBackupArn
                        - aws:dynamodb_table:userpacks#DynamoTableExportArn
                        - aws:dynamodb_table:userpacks#DynamoTableIndexArn
                Version: "2012-10-17"
            - Name: userapps-policy
              Policy:
                Statement:
                    - Action:
                        - dynamodb:*
                      Effect: Allow
                      Resource:
                        - aws:dynamodb_table:userapps#Arn
                        - aws:dynamodb_table:userapps#DynamoTableStreamArn
                        - aws:dynamodb_table:userapps#DynamoTableBackupArn
                        - aws:dynamodb_table:userapps#DynamoTableExportArn
                        - aws:dynamodb_table:userapps#DynamoTableIndexArn
                Version: "2012-10-17"
            - Name: deployments-policy
              Policy:
                Statement:
                    - Action:
                        - dynamodb:*
                      Effect: Allow
                      Resource:
                        - aws:dynamodb_table:deployments#Arn
                        - aws:dynamodb_table:deployments#DynamoTableStreamArn
                        - aws:dynamodb_table:deployments#DynamoTableBackupArn
                        - aws:dynamodb_table:deployments#DynamoTableExportArn
                        - aws:dynamodb_table:deployments#DynamoTableIndexArn
                Version: "2012-10-17"
            - Name: iac-store-policy
              Policy:
                Statement:
                    - Action:
                        - s3:*
                      Effect: Allow
                      Resource:
                        - aws:s3_bucket:iac-store#Arn
                        - aws:s3_bucket:iac-store#AllBucketDirectory
                Version: "2012-10-17"
            - Name: stack-snap-binaries-policy
              Policy:
                Statement:
                    - Action:
                        - s3:*
                      Effect: Allow
                      Resource:
                        - aws:s3_bucket:stack-snap-binaries#Arn
                        - aws:s3_bucket:stack-snap-binaries#AllBucketDirectory
                Version: "2012-10-17"
        ManagedPolicies:
            - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: ecs_service_0-execution-role
    aws:log_group:ecs_service_0-log-group:
        LogGroupName: /aws/ecs/ecs_service_0
        RetentionInDays: 5
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: ecs_service_0-log-group
    aws:route_table_association:subnet-0-subnet-0-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-0-route_table
        Subnet: aws:subnet:vpc-0:subnet-0
    aws:security_group:vpc-0:subnet-0-deploy-logs:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - CidrBlocks:
                - 10.0.128.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-0
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-0-deploy-logs
        Vpc: aws:vpc:vpc-0
    aws:SERVICE_API:subnet-0-pulumistacks:
    aws:route_table_association:subnet-1-subnet-1-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-1-route_table
        Subnet: aws:subnet:vpc-0:subnet-1
    aws:security_group:vpc-0:subnet-1-deploy-logs:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - CidrBlocks:
                - 10.0.192.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-1
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-1-deploy-logs
        Vpc: aws:vpc:vpc-0
    aws:route_table:vpc-0:subnet-0-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              NatGateway: aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-0-route_table
        Vpc: aws:vpc:vpc-0
    aws:efs_mount_target:deploy-logs:subnet-0-deploy-logs:
        FileSystem: aws:efs_file_system:deploy-logs
        SecurityGroups:
            - aws:security_group:vpc-0:subnet-0-deploy-logs
        Subnet: aws:subnet:vpc-0:subnet-2
    aws:dynamodb_table:deployments:
        Attributes:
            - Name: id
              Type: S
            - Name: iac_stack_composite_key
              Type: S
        BillingMode: PAY_PER_REQUEST
        HashKey: id
        RangeKey: iac_stack_composite_key
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: dynamodb_table_7
    aws:dynamodb_table:pulumistacks:
        Attributes:
            - Name: id
              Type: S
            - Name: name
              Type: S
        BillingMode: PAY_PER_REQUEST
        HashKey: project_name
        RangeKey: name
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: dynamodb_table_8
    aws:dynamodb_table:userapps:
        Attributes:
            - Name: id
              Type: S
            - Name: version
              Type: "N"
        BillingMode: PAY_PER_REQUEST
        HashKey: app_id
        RangeKey: version
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: dynamodb_table_9
    aws:dynamodb_table:userpacks:
        Attributes:
            - Name: id
              Type: S
        BillingMode: PAY_PER_REQUEST
        HashKey: id
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: dynamodb_table_10
    aws:s3_bucket:iac-store:
        ForceDestroy: true
        SSEAlgorithm: aws:kms
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: s3-bucket-15
    aws:s3_bucket:stack-snap-binaries:
        ForceDestroy: true
        SSEAlgorithm: aws:kms
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: s3-bucket-21
    aws:route_table:vpc-0:subnet-1-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              NatGateway: aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-1-route_table
        Vpc: aws:vpc:vpc-0
    aws:efs_mount_target:deploy-logs:subnet-1-deploy-logs:
        FileSystem: aws:efs_file_system:deploy-logs
        SecurityGroups:
            - aws:security_group:vpc-0:subnet-1-deploy-logs
        Subnet: aws:subnet:vpc-0:subnet-3
    aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway:
        ElasticIp: aws:elastic_ip:subnet-0-route_table-nat_gateway-elastic_ip
        Subnet: aws:subnet:vpc-0:subnet-2
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-0-route_table-nat_gateway
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway:
        ElasticIp: aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip
        Subnet: aws:subnet:vpc-0:subnet-3
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-1-route_table-nat_gateway
    aws:efs_file_system:deploy-logs:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        Encrypted: true
        PerformanceMode: generalPurpose
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: efs_file_system_5
        ThroughputMode: bursting
    aws:elastic_ip:subnet-0-route_table-nat_gateway-elastic_ip:
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-0-route_table-nat_gateway-elastic_ip
    aws:subnet:vpc-0:subnet-2:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        CidrBlock: 10.0.0.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-2-route_table
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-2
        Type: public
        Vpc: aws:vpc:vpc-0
    aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip:
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-1-route_table-nat_gateway-elastic_ip
    aws:subnet:vpc-0:subnet-3:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-1
        CidrBlock: 10.0.64.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-3-route_table
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-3
        Type: public
        Vpc: aws:vpc:vpc-0
    aws:availability_zone:region-0:availability_zone-0:
        Index: 0
        Region: aws:region:region-0
    aws:route_table_association:subnet-2-subnet-2-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-2-route_table
        Subnet: aws:subnet:vpc-0:subnet-2
    aws:availability_zone:region-0:availability_zone-1:
        Index: 1
        Region: aws:region:region-0
    aws:route_table_association:subnet-3-subnet-3-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-3-route_table
        Subnet: aws:subnet:vpc-0:subnet-3
    aws:security_group:vpc-0:ecs_service_0-security_group:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - CidrBlocks:
                - 10.0.0.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-2
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - CidrBlocks:
                - 10.0.64.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-3
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: ecs_service_0-security_group
        Vpc: aws:vpc:vpc-0
    aws:route_table:vpc-0:subnet-2-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              Gateway: aws:internet_gateway:vpc-0:internet_gateway-0
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-2-route_table
        Vpc: aws:vpc:vpc-0
    aws:region:region-0:
    aws:route_table:vpc-0:subnet-3-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              Gateway: aws:internet_gateway:vpc-0:internet_gateway-0
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: subnet-3-route_table
        Vpc: aws:vpc:vpc-0
    aws:internet_gateway:vpc-0:internet_gateway-0:
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: internet_gateway-0
        Vpc: aws:vpc:vpc-0
    aws:vpc:vpc-0:
        CidrBlock: 10.0.0.0/16
        EnableDnsHostnames: true
        EnableDnsSupport: true
        Tags:
            GLOBAL_KLOTHO_TAG: ""
            RESOURCE_NAME: vpc-0
edges:
    aws:cloudfront_distribution:stacksnap -> aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0:
    aws:cloudfront_distribution:stacksnap -> aws:load_balancer:load-balancer-2:
    aws:cloudfront_distribution:stacksnap -> aws:s3_bucket:stacksnap-ui:
    aws:security_group:vpc-0:load-balancer-2-security_group -> aws:load_balancer:load-balancer-2:
    aws:security_group:vpc-0:load-balancer-2-security_group -> aws:vpc:vpc-0:
    aws:cloudfront_origin_access_identity:cloudfront_origin_access_identity-0 -> aws:s3_bucket_policy:s3_bucket_policy-0:
    aws:load_balancer:load-balancer-2 -> aws:load_balancer_listener:load-balancer-2:load_balancer_2-listener-0:
    aws:load_balancer:load-balancer-2 -> aws:subnet:vpc-0:subnet-2:
    aws:load_balancer:load-balancer-2 -> aws:subnet:vpc-0:subnet-3:
    aws:s3_bucket_policy:s3_bucket_policy-0 -> aws:s3_bucket:stacksnap-ui:
    ? aws:load_balancer_listener:load-balancer-2:load_balancer_2-listener-0 -> aws:load_balancer_listener_rule:load_balancer_2-listener-0:default-rule
    :
    aws:load_balancer_listener_rule:load_balancer_2-listener-0:default-rule -> aws:target_group:default-rule-stack-snap:
    aws:target_group:default-rule-stack-snap -> aws:ecs_service:stack-snap:
    aws:ecr_image:ecs_service_0-ecs_service_0 -> aws:ecr_repo:ecs_service_0-ecs_service_0-ecr_repo:
    aws:ecs_service:stack-snap -> aws:ecs_cluster:ecs_cluster-0:
    aws:ecs_service:stack-snap -> aws:ecs_task_definition:ecs_service_0:
    aws:ecs_service:stack-snap -> aws:subnet:vpc-0:subnet-0:
    aws:ecs_service:stack-snap -> aws:subnet:vpc-0:subnet-1:
    aws:ecs_task_definition:ecs_service_0 -> aws:ecr_image:ecs_service_0-ecs_service_0:
    aws:ecs_task_definition:ecs_service_0 -> aws:efs_access_point:deploy-logs:stack-snap-deploy-logs:
    aws:ecs_task_definition:ecs_service_0 -> aws:iam_role:ecs_service_0-execution-role:
    aws:ecs_task_definition:ecs_service_0 -> aws:log_group:ecs_service_0-log-group:
    aws:subnet:vpc-0:subnet-0 -> aws:SERVICE_API:subnet-0-pulumistacks:
    aws:subnet:vpc-0:subnet-0 -> aws:availability_zone:region-0:availability_zone-0:
    aws:subnet:vpc-0:subnet-0 -> aws:route_table_association:subnet-0-subnet-0-route_table:
    aws:subnet:vpc-0:subnet-0 -> aws:security_group:vpc-0:subnet-0-deploy-logs:
    aws:subnet:vpc-0:subnet-0 -> aws:vpc:vpc-0:
    aws:subnet:vpc-0:subnet-1 -> aws:SERVICE_API:subnet-0-pulumistacks:
    aws:subnet:vpc-0:subnet-1 -> aws:availability_zone:region-0:availability_zone-1:
    aws:subnet:vpc-0:subnet-1 -> aws:route_table_association:subnet-1-subnet-1-route_table:
    aws:subnet:vpc-0:subnet-1 -> aws:security_group:vpc-0:subnet-1-deploy-logs:
    aws:subnet:vpc-0:subnet-1 -> aws:vpc:vpc-0:
    aws:efs_access_point:deploy-logs:stack-snap-deploy-logs -> aws:efs_file_system:deploy-logs:
    aws:efs_access_point:deploy-logs:stack-snap-deploy-logs -> aws:efs_mount_target:deploy-logs:subnet-0-deploy-logs:
    aws:efs_access_point:deploy-logs:stack-snap-deploy-logs -> aws:efs_mount_target:deploy-logs:subnet-1-deploy-logs:
    aws:iam_role:ecs_service_0-execution-role -> aws:dynamodb_table:deployments:
    aws:iam_role:ecs_service_0-execution-role -> aws:dynamodb_table:pulumistacks:
    aws:iam_role:ecs_service_0-execution-role -> aws:dynamodb_table:userapps:
    aws:iam_role:ecs_service_0-execution-role -> aws:dynamodb_table:userpacks:
    aws:iam_role:ecs_service_0-execution-role -> aws:efs_file_system:deploy-logs:
    aws:iam_role:ecs_service_0-execution-role -> aws:s3_bucket:iac-store:
    aws:iam_role:ecs_service_0-execution-role -> aws:s3_bucket:stack-snap-binaries:
    aws:route_table_association:subnet-0-subnet-0-route_table -> aws:route_table:vpc-0:subnet-0-route_table:
    aws:security_group:vpc-0:subnet-0-deploy-logs -> aws:efs_mount_target:deploy-logs:subnet-0-deploy-logs:
    aws:security_group:vpc-0:subnet-0-deploy-logs -> aws:vpc:vpc-0:
    aws:SERVICE_API:subnet-0-pulumistacks -> aws:dynamodb_table:deployments:
    aws:SERVICE_API:subnet-0-pulumistacks -> aws:dynamodb_table:pulumistacks:
    aws:SERVICE_API:subnet-0-pulumistacks -> aws:dynamodb_table:userapps:
    aws:SERVICE_API:subnet-0-pulumistacks -> aws:dynamodb_table:userpacks:
    aws:SERVICE_API:subnet-0-pulumistacks -> aws:s3_bucket:iac-store:
    aws:SERVICE_API:subnet-0-pulumistacks -> aws:s3_bucket:stack-snap-binaries:
    aws:route_table_association:subnet-1-subnet-1-route_table -> aws:route_table:vpc-0:subnet-1-route_table:
    aws:security_group:vpc-0:subnet-1-deploy-logs -> aws:efs_mount_target:deploy-logs:subnet-1-deploy-logs:
    aws:security_group:vpc-0:subnet-1-deploy-logs -> aws:vpc:vpc-0:
    aws:route_table:vpc-0:subnet-0-route_table -> aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway:
    aws:route_table:vpc-0:subnet-0-route_table -> aws:vpc:vpc-0:
    aws:efs_mount_target:deploy-logs:subnet-0-deploy-logs -> aws:efs_file_system:deploy-logs:
    aws:efs_mount_target:deploy-logs:subnet-0-deploy-logs -> aws:subnet:vpc-0:subnet-2:
    aws:route_table:vpc-0:subnet-1-route_table -> aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway:
    aws:route_table:vpc-0:subnet-1-route_table -> aws:vpc:vpc-0:
    aws:efs_mount_target:deploy-logs:subnet-1-deploy-logs -> aws:efs_file_system:deploy-logs:
    aws:efs_mount_target:deploy-logs:subnet-1-deploy-logs -> aws:subnet:vpc-0:subnet-3:
    aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway -> aws:elastic_ip:subnet-0-route_table-nat_gateway-elastic_ip:
    aws:nat_gateway:subnet-2:subnet-0-route_table-nat_gateway -> aws:subnet:vpc-0:subnet-2:
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway -> aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip:
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway -> aws:subnet:vpc-0:subnet-3:
    aws:efs_file_system:deploy-logs -> aws:availability_zone:region-0:availability_zone-0:
    aws:subnet:vpc-0:subnet-2 -> aws:availability_zone:region-0:availability_zone-0:
    aws:subnet:vpc-0:subnet-2 -> aws:route_table_association:subnet-2-subnet-2-route_table:
    aws:subnet:vpc-0:subnet-2 -> aws:security_group:vpc-0:ecs_service_0-security_group:
    aws:subnet:vpc-0:subnet-2 -> aws:vpc:vpc-0:
    aws:subnet:vpc-0:subnet-3 -> aws:availability_zone:region-0:availability_zone-1:
    aws:subnet:vpc-0:subnet-3 -> aws:route_table_association:subnet-3-subnet-3-route_table:
    aws:subnet:vpc-0:subnet-3 -> aws:security_group:vpc-0:ecs_service_0-security_group:
    aws:subnet:vpc-0:subnet-3 -> aws:vpc:vpc-0:
    aws:availability_zone:region-0:availability_zone-0 -> aws:region:region-0:
    aws:route_table_association:subnet-2-subnet-2-route_table -> aws:route_table:vpc-0:subnet-2-route_table:
    aws:availability_zone:region-0:availability_zone-1 -> aws:region:region-0:
    aws:route_table_association:subnet-3-subnet-3-route_table -> aws:route_table:vpc-0:subnet-3-route_table:
    aws:security_group:vpc-0:ecs_service_0-security_group -> aws:ecs_service:stack-snap:
    aws:security_group:vpc-0:ecs_service_0-security_group -> aws:vpc:vpc-0:
    aws:route_table:vpc-0:subnet-2-route_table -> aws:internet_gateway:vpc-0:internet_gateway-0:
    aws:route_table:vpc-0:subnet-2-route_table -> aws:vpc:vpc-0:
    aws:route_table:vpc-0:subnet-3-route_table -> aws:internet_gateway:vpc-0:internet_gateway-0:
    aws:route_table:vpc-0:subnet-3-route_table -> aws:vpc:vpc-0:
    aws:internet_gateway:vpc-0:internet_gateway-0 -> aws:vpc:vpc-0:
