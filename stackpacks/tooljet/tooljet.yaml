name: ToolJet
id: tooljet
description: Low-code framework for internal tools
version: '1.0.0'
requires:
  - network
  - ecs
  - postgres

docker_images:
  tooljet:

base:
  resources:
    aws:ecs_service:tooljet-service:
      HealthCheckGracePeriodSeconds: 900
      LoadBalancers[0].ContainerPort: 3000
      TaskDefinition: aws:ecs_task_definition:tooljet-task
      DesiredCount: 1
    aws:ecs_task_definition:tooljet-task:
      Cpu: ${CPU}
      Memory: ${Memory}
      ContainerDefinitions[0]:
        Image: ${docker_image:tooljet}
        PortMappings[0]:
          ContainerPort: 3000
          HostPort: 3000
        Cpu: ${CPU}
        Memory: ${Memory}
        Command:
          - npm
          - run
          - "start:prod"
        Environment:
        - Name: TOOLJET_HOST
          Value: "http://localhost"
        - Name: PG_HOST
          Value: aws:rds_instance:stacksnap-postgres#Host
        - Name: PG_USER
          Value: aws:rds_instance:stacksnap-postgres#Username
        - Name: PG_PASS
          Value: aws:rds_instance:stacksnap-postgres#Password
        - Name: PG_DB
          Value: ${DatabaseName}
        - Name: DEPLOYMENT_PLATFORM
          Value: "aws:ecs"
        - Name: REDIS_HOST
          Value: aws:memorydb_cluster:tooljet-memcluster#PrimaryAddress
        - Name: REDIS_PORT
          Value: aws:memorydb_cluster:tooljet-memcluster#PrimaryPort
    aws:target_group:tooljet-tg:
      Port: 3000
      Protocol: HTTP
      HealthCheck:
        Protocol: HTTP
        Path: /api/health
        Matcher: 200
    aws:load_balancer:tooljet-lb:
      Scheme: internet-facing
      Type: application
    aws:load_balancer_listener:tooljet-lb:tooljet-listener:
      LoadBalancer: aws:load_balancer:tooljet-lb
      Port: 80
      Protocol: HTTP
      DefaultAction:
        Type: forward
        TargetGroup: aws:target_group:tooljet-tg
    aws:memorydb_cluster:tooljet-memcluster:
    aws:cloudfront_distribution:tooljet-cf:
  edges:
    aws:cloudfront_distribution:tooljet-cf -> aws:load_balancer:tooljet-lb:
    aws:load_balancer:tooljet-lb -> aws:ecs_service:tooljet-service:
    aws:load_balancer:tooljet-lb -> aws:load_balancer_listener:tooljet-lb:tooljet-listener:
    aws:load_balancer_listener:tooljet-lb:tooljet-listener -> aws:target_group:tooljet-tg:
    aws:target_group:tooljet-tg -> aws:ecs_service:tooljet-service:
    aws:ecs_service:tooljet-service -> aws:rds_instance:stacksnap-postgres:
    aws:ecs_service:tooljet-service -> aws:memorydb_cluster:tooljet-memcluster:

configuration:
  CPU: # This is an example of a value used in the base config
    name: CPU
    description: The amount of CPU to allocate to the ToolJet service
    type: number
    default: 1024
    validation:
      minValue: 1024
      maxValue: 4096

  Memory:
    name: Memory
    description: The amount of Memory to allocate to the ToolJet service
    type: number
    default: 3072
    validation:
      minValue: 3072
      maxValue: 4096

  DatabaseName:
    name: Database Name
    description: the name of the database to store tooljet data on the instance
    type: string
    default: tooljet
    action: create_database
  
  RedisClusterPassword:
    name: Redis Cluster Password
    description: The password to use for the Redis cluster
    type: string
    pulumi_key: klo:tooljet-service-tooljet-memcluster-password
    secret: true
    generate_default: true
    validation:
      minLength: 16
      maxLength: 128

outputs:
  URL:
    description: The URL of the ToolJet service
    value: aws:cloudfront_distribution:tooljet-cf#Domain
